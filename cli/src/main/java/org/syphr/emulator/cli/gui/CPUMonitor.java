package org.syphr.emulator.cli.gui;

import org.syphr.emulator.common.Value;
import org.syphr.emulator.cpu.Address;
import org.syphr.emulator.cpu.CPUState;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import java.awt.*;

class CPUMonitor
{
    private JPanel root;
    private JSplitPane mainSplit;
    private JScrollPane addressScroll;
    private JTable addressTable;
    private JScrollPane opLogScroll;
    private JTable opLogTable;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR call it in your
     * code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        root = new JPanel();
        root.setLayout(new GridBagLayout());
        mainSplit = new JSplitPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        root.add(mainSplit, gbc);
        addressScroll = new JScrollPane();
        mainSplit.setLeftComponent(addressScroll);
        addressTable = new JTable();
        addressScroll.setViewportView(addressTable);
        opLogScroll = new JScrollPane();
        mainSplit.setRightComponent(opLogScroll);
        opLogTable = new JTable();
        opLogScroll.setViewportView(opLogTable);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$()
    {
        return root;
    }

    public CPUMonitor()
    {
        addressTable.setDefaultRenderer(Address.class, new DefaultTableCellRenderer()
        {
            @Override
            protected void setValue(Object value)
            {
                setText("%04X".formatted(((Address) value).data()));
            }
        });
        addressTable.setDefaultRenderer(Value.class, new DefaultTableCellRenderer()
        {
            @Override
            protected void setValue(Object value)
            {
                setText("%02X".formatted(((Value) value).data()));
            }
        });

        var addressData = new AddressTableModel();
        addressTable.setModel(addressData);

        var opLogData = new OpLogTableModel();
        opLogTable.setModel(opLogData);
    }

    public void updateState(CPUState state)
    {
        // TODO
    }
}
